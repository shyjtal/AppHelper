cd ~/sh/app/app_helper

while IFS='=' read -r key value; do
  # 忽略空行和注释行
  if [[ -n "$key" && ! "$key" =~ ^# ]]; then
    key_cleaned="${key// /_}"
    export "$key_cleaned=$value"
  fi
done < config

sh_name="$1"

if [[ $sh_name == shell/* ]]; then
    sh_type=shell
    sh_name="${sh_name#shell/}"
    sh_base_path=$HOME/sh
    app_path=app
    echo "configure $sh_name ..."
elif [[ $sh_name == dev/* ]]; then
    sh_type=shell
    sh_name="${sh_name#dev/}"
    sh_base_path=$HOME/sh
    app_path=dev
    echo "configure $sh_name ..."
elif [[ $sh_name == tool/* ]]; then
    sh_type=tool
    sh_name="${sh_name#tool/}"
    sh_base_path=$HOME/sh/tools
    echo "configure $sh_name ..."
elif [[ $sh_name == app/* ]]; then
    sh_type=app
    sh_name="${sh_name#app/}"
    sh_base_path=$HOME/Applications
    addition_tail=.app
    echo "configure $sh_name ..."
elif [[ $sh_name == library/* ]]; then
    sh_type=library
    sh_name="${sh_name#library/}"
    sh_base_path=$HOME/Library
    echo "configure $sh_name ..."
fi

if [[ $sh_type != "library" ]]; then
  mkdir -p ./temp/Contents/"$sh_name"
fi

if [[ $sh_type == "shell" || $sh_type == "tool" ]]; then
  app_name="${!sh_name}"
  cp $sh_base_path/"$sh_name" ./temp/Contents/$sh_name/

  if [[ -n "$app_name" ]]; then
    mkdir -p ./temp/Contents/$sh_name/$app_path/"$app_name"
    cp -r $sh_base_path/$app_path/"$app_name"/* ./temp/Contents/$sh_name/$app_path/"$app_name"/
  fi

elif [[ $sh_type == "app" || $sh_type == "library" ]]; then
  cp -R "$sh_base_path/$sh_name$addition_tail" ./temp/Contents/"$sh_name"/
fi

if [[ $sh_type != "library" ]]; then
  cp resources/install/Install_$sh_type.command ./temp/Contents/"$sh_name"/Install.command
fi







